app Blog {
  wasp: {
    version: "^0.11.1"
  },
  title: "Blog",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx"
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  }
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id       Int       @id @default(autoincrement())
    username String    @unique
    password String
    posts    Post[]
    comments Comment[]
psl=}

entity Post {=psl
    id       Int       @id @default(autoincrement())
    title    String
    content  String
    user     User      @relation(fields: [userId], references: [id])
    userId   Int
    comments Comment[]
psl=}

entity Comment {=psl
    id      Int    @id @default(autoincrement())
    content String
    user    User   @relation(fields: [userId], references: [id])
    userId  Int
    post    Post   @relation(fields: [postId], references: [id])
    postId  Int
psl=}

action createPost {
  fn: import { createPost } from "@server/actions.js",
  entities: [Post]
}

action editPost {
  fn: import { editPost } from "@server/actions.js",
  entities: [Post]
}

action createComment {
  fn: import { createComment } from "@server/actions.js",
  entities: [Comment]
}

query getPosts {
  fn: import { getPosts } from "@server/queries.js",
  entities: [Post]
}

query getPost {
  fn: import { getPost } from "@server/queries.js",
  entities: [Post, Comment]
}

route HomeRoute { path: "/", to: HomePage }
page HomePage {
  component: import { Home } from "@client/pages/Home.jsx",
  authRequired: false
}

route NewPostRoute { path: "/new-post", to: NewPostPage }
page NewPostPage {
  component: import { NewPost } from "@client/pages/NewPost.jsx",
  authRequired: true
}

route EditPostRoute { path: "/edit-post/:postId", to: EditPostPage }
page EditPostPage {
  component: import { EditPost } from "@client/pages/EditPost.jsx",
  authRequired: true
}

route ViewPostRoute { path: "/post/:postId", to: ViewPostPage }
page ViewPostPage {
  component: import { ViewPost } from "@client/pages/ViewPost.jsx",
  authRequired: false
}